{"version":3,"sources":["Component/Heading.js","context/AppReducer.js","context/GlobalState.js","Component/UserList.js","Component/Home.js","Component/AddUser.js","Component/EditUser.js","App.js","reportWebVitals.js","index.js"],"names":["Heading","Navbar","color","dark","Container","NavbarBrand","href","Nav","NavItem","className","to","state","action","type","users","filter","user","id","payload","updateUser","updateUsers","map","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","removeUser","addUser","editUser","UserList","useContext","ListGroup","length","index","ListGroupItem","name","Button","onClick","Home","AddUser","useState","setName","history","useHistory","Form","onSubmit","newUser","uuid","push","FormGroup","Label","Input","onChange","e","target","placeholder","EditUser","props","localStorage","setItem","getItem","selectedUser","setSelectedUser","currentUserId","match","params","useEffect","UserId","find","console","log","App","style","maxWidth","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22d12202.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, NavItem, NavbarBrand, Container } from \"reactstrap\";\n\nexport const Heading = () => {\n  return (\n    <Navbar color=\"dark\" dark>\n      <Container>\n        <NavbarBrand href=\"/\">My Users</NavbarBrand>\n        <Nav>\n          <NavItem>\n            <Link className=\"btn btn-primary\" to=\"/add\">\n              Add User\n            </Link>\n          </NavItem>\n        </Nav>\n      </Container>\n    </Navbar>\n  );\n};\n","export default (state, action) => {\n  switch (action.type) {\n    case \"REMOVE_USER\":\n      return {\n        ...state,\n        users: state.users.filter(user => {\n          return user.id !== action.payload;\n        })\n      };\n    case \"ADD_USER\":\n      return {\n        ...state,\n        users: [action.payload, ...state.users]\n      };\n    case \"EDIT_USER\":\n      const updateUser = action.payload;\n\n      const updateUsers = state.users.map(user => {\n        if (user.id === updateUser.id) {\n          return updateUser;\n        }\n        return user;\n      });\n      return {\n        ...state,\n        users: updateUsers\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// Initial State\nconst initialState = {\n  users: []\n};\n\n// Create Context\nexport const GlobalContext = createContext(initialState);\n\n// Provider Component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  const removeUser = id => {\n    dispatch({\n      type: \"REMOVE_USER\",\n      payload: id\n    });\n  };\n\n  const addUser = user => {\n    dispatch({\n      type: \"ADD_USER\",\n      payload: user\n    });\n  };\n\n  const editUser = user => {\n    dispatch({\n      type: \"EDIT_USER\",\n      payload: user\n    });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        users: state.users,\n        removeUser,\n        addUser,\n        editUser\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Link } from \"react-router-dom\";\nimport { ListGroup, ListGroupItem, Button } from \"reactstrap\";\n\nexport const UserList = () => {\n  let { users, removeUser } = useContext(GlobalContext);\n\n  return (\n    <ListGroup className=\"mt-4\">\n      {users.length > 0 ? (\n        <>\n          {users.map((user, index) => (\n            <ListGroupItem key={index} className=\"d-flex\">\n              <strong>{user.name}</strong>\n              <div className=\"ml-auto\">\n                <Link className=\"btn btn-warning mr-1 \" to={`/edit/${user.id}`}>\n                  Edit\n                </Link>\n                <Button onClick={() => removeUser(user.id)} color=\"danger\">\n                  Delete\n                </Button>\n              </div>\n            </ListGroupItem>\n          ))}\n        </>\n      ) : (\n        <h className=\"text-center\"> No User</h>\n      )}\n    </ListGroup>\n  );\n};\n","import React from \"react\";\nimport { Heading } from \"./Heading\";\nimport { UserList } from \"./UserList\";\nexport const Home = () => {\n  return (\n    <>\n      <Heading />\n      <UserList />\n    </>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { v4 as uuid } from \"uuid\";\nexport const AddUser = () => {\n  const [name, setName] = useState(\"\");\n\n  const { addUser } = useContext(GlobalContext);\n  const history = useHistory();\n\n  const onSubmit = () => {\n    const newUser = {\n      id: uuid(),\n      name\n    };\n    addUser(newUser);\n    history.push(\"/\");\n  };\n\n  const onChange = e => {\n    setName(e.target.value);\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <FormGroup>\n        <Label>Name</Label>\n        <Input\n          type=\"text\"\n          value={name}\n          onChange={onChange}\n          placeholder=\"Enter Name\"\n        ></Input>\n      </FormGroup>\n      <Button type=\"submit\">Submit</Button>\n      <Link to=\"/\" className=\"btn btn-danger ml-2\">\n        Cancel\n      </Link>\n    </Form>\n  );\n};\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const EditUser = props => {\n  const { users, editUser } = useContext(GlobalContext);\n  localStorage.setItem(\"users\", props.users);\n  localStorage.getItem(\"name\", props.name);\n  const [selectedUser, setSelectedUser] = useState({\n    id: \"\",\n    name: \"\"\n  });\n  const history = useHistory();\n\n  const currentUserId = props.match.params.id;\n\n  useEffect(() => {\n    const UserId = currentUserId;\n    const selectedUser = users.find(user => user.id === UserId);\n    setSelectedUser(selectedUser);\n  }, [currentUserId, users]);\n  const onSubmit = () => {\n    editUser(selectedUser);\n    history.push(\"/\");\n  };\n  const onChange = e => {\n    setSelectedUser({ ...selectedUser, [e.target.name]: e.target.value });\n  };\n\n  console.log(setSelectedUser);\n  return (\n    <Form onSubmit={onSubmit}>\n      <FormGroup>\n        <Label>Name</Label>\n        <Input\n          type=\"text\"\n          value={selectedUser.name}\n          onChange={onChange}\n          name=\"name\"\n          placeholder=\"Enter Name\"\n        ></Input>\n      </FormGroup>\n      <Button type=\"submit\">Edit Name</Button>\n      <Link to=\"/\" className=\"btn btn-danger ml-2\">\n        Cancel\n      </Link>\n    </Form>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Home } from \"./Component/Home\";\nimport { AddUser } from \"./Component/AddUser.js\";\nimport { EditUser } from \"./Component/EditUser\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div\n        style={{\n          maxWidth: \"30rem\",\n          margin: \"4rem auto\"\n        }}\n      >\n        <GlobalProvider>\n          <Router>\n            <Switch>\n              <Route exact path=\"/add\" component={AddUser} />\n              <Route path=\"/edit/:id\" component={EditUser} />\n              <Route path=\"/\" component={Home} />\n            </Switch>\n          </Router>\n        </GlobalProvider>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}